/*
 * Camel REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: Schema 2.0.2 Service 2.3.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.muenchendigital.digiwf.okewo.integration.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonValue;
import io.muenchendigital.digiwf.okewo.integration.gen.model.AnschriftErweitertType;
import io.muenchendigital.digiwf.okewo.integration.gen.model.MeldungType;
import io.muenchendigital.digiwf.okewo.integration.gen.model.TeilbekanntesDatumType;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * AbstractWohnungType
 */

@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "_type", visible = true )
@JsonSubTypes({
  @JsonSubTypes.Type(value = AktuelleWohnungType.class, name = "AktuelleWohnungType"),
  @JsonSubTypes.Type(value = InaktuelleWohnungType.class, name = "InaktuelleWohnungType"),
  @JsonSubTypes.Type(value = WegzugsWohnungType.class, name = "WegzugsWohnungType"),
  @JsonSubTypes.Type(value = ZuzugsWohnungType.class, name = "ZuzugsWohnungType"),
})

public class AbstractWohnungType {
  @JsonProperty("melderegisterAnschrift")
  private AnschriftErweitertType melderegisterAnschrift = null;

  @JsonProperty("einzug")
  private String einzug = null;

  @JsonProperty("auszug")
  private TeilbekanntesDatumType auszug = null;

  @JsonProperty("statuswechsel")
  private String statuswechsel = null;

  @JsonProperty("meldungStatuswechsel")
  private MeldungType meldungStatuswechsel = null;

  @JsonProperty("meldungEinzug")
  private MeldungType meldungEinzug = null;

  @JsonProperty("meldungAuszug")
  private MeldungType meldungAuszug = null;

  @JsonProperty("innerhalb")
  private Boolean innerhalb = null;

  @JsonProperty("belegGebunden")
  private Boolean belegGebunden = null;

  @JsonProperty("gefoerdert")
  private Boolean gefoerdert = null;

  @JsonProperty("scheinadresse")
  private Boolean scheinadresse = null;

  public AbstractWohnungType melderegisterAnschrift(AnschriftErweitertType melderegisterAnschrift) {
    this.melderegisterAnschrift = melderegisterAnschrift;
    return this;
  }

   /**
   * Get melderegisterAnschrift
   * @return melderegisterAnschrift
  **/
  @Valid
  @Schema(description = "")
  public AnschriftErweitertType getMelderegisterAnschrift() {
    return melderegisterAnschrift;
  }

  public void setMelderegisterAnschrift(AnschriftErweitertType melderegisterAnschrift) {
    this.melderegisterAnschrift = melderegisterAnschrift;
  }

  public AbstractWohnungType einzug(String einzug) {
    this.einzug = einzug;
    return this;
  }

   /**
   * Get einzug
   * @return einzug
  **/
  @Schema(description = "")
  public String getEinzug() {
    return einzug;
  }

  public void setEinzug(String einzug) {
    this.einzug = einzug;
  }

  public AbstractWohnungType auszug(TeilbekanntesDatumType auszug) {
    this.auszug = auszug;
    return this;
  }

   /**
   * Get auszug
   * @return auszug
  **/
  @Valid
  @Schema(description = "")
  public TeilbekanntesDatumType getAuszug() {
    return auszug;
  }

  public void setAuszug(TeilbekanntesDatumType auszug) {
    this.auszug = auszug;
  }

  public AbstractWohnungType statuswechsel(String statuswechsel) {
    this.statuswechsel = statuswechsel;
    return this;
  }

   /**
   * Get statuswechsel
   * @return statuswechsel
  **/
  @Schema(description = "")
  public String getStatuswechsel() {
    return statuswechsel;
  }

  public void setStatuswechsel(String statuswechsel) {
    this.statuswechsel = statuswechsel;
  }

  public AbstractWohnungType meldungStatuswechsel(MeldungType meldungStatuswechsel) {
    this.meldungStatuswechsel = meldungStatuswechsel;
    return this;
  }

   /**
   * Get meldungStatuswechsel
   * @return meldungStatuswechsel
  **/
  @Valid
  @Schema(description = "")
  public MeldungType getMeldungStatuswechsel() {
    return meldungStatuswechsel;
  }

  public void setMeldungStatuswechsel(MeldungType meldungStatuswechsel) {
    this.meldungStatuswechsel = meldungStatuswechsel;
  }

  public AbstractWohnungType meldungEinzug(MeldungType meldungEinzug) {
    this.meldungEinzug = meldungEinzug;
    return this;
  }

   /**
   * Get meldungEinzug
   * @return meldungEinzug
  **/
  @Valid
  @Schema(description = "")
  public MeldungType getMeldungEinzug() {
    return meldungEinzug;
  }

  public void setMeldungEinzug(MeldungType meldungEinzug) {
    this.meldungEinzug = meldungEinzug;
  }

  public AbstractWohnungType meldungAuszug(MeldungType meldungAuszug) {
    this.meldungAuszug = meldungAuszug;
    return this;
  }

   /**
   * Get meldungAuszug
   * @return meldungAuszug
  **/
  @Valid
  @Schema(description = "")
  public MeldungType getMeldungAuszug() {
    return meldungAuszug;
  }

  public void setMeldungAuszug(MeldungType meldungAuszug) {
    this.meldungAuszug = meldungAuszug;
  }

  public AbstractWohnungType innerhalb(Boolean innerhalb) {
    this.innerhalb = innerhalb;
    return this;
  }

   /**
   * Get innerhalb
   * @return innerhalb
  **/
  @Schema(description = "")
  public Boolean isInnerhalb() {
    return innerhalb;
  }

  public void setInnerhalb(Boolean innerhalb) {
    this.innerhalb = innerhalb;
  }

  public AbstractWohnungType belegGebunden(Boolean belegGebunden) {
    this.belegGebunden = belegGebunden;
    return this;
  }

   /**
   * Get belegGebunden
   * @return belegGebunden
  **/
  @Schema(description = "")
  public Boolean isBelegGebunden() {
    return belegGebunden;
  }

  public void setBelegGebunden(Boolean belegGebunden) {
    this.belegGebunden = belegGebunden;
  }

  public AbstractWohnungType gefoerdert(Boolean gefoerdert) {
    this.gefoerdert = gefoerdert;
    return this;
  }

   /**
   * Get gefoerdert
   * @return gefoerdert
  **/
  @Schema(description = "")
  public Boolean isGefoerdert() {
    return gefoerdert;
  }

  public void setGefoerdert(Boolean gefoerdert) {
    this.gefoerdert = gefoerdert;
  }

  public AbstractWohnungType scheinadresse(Boolean scheinadresse) {
    this.scheinadresse = scheinadresse;
    return this;
  }

   /**
   * Get scheinadresse
   * @return scheinadresse
  **/
  @Schema(description = "")
  public Boolean isScheinadresse() {
    return scheinadresse;
  }

  public void setScheinadresse(Boolean scheinadresse) {
    this.scheinadresse = scheinadresse;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AbstractWohnungType abstractWohnungType = (AbstractWohnungType) o;
    return Objects.equals(this.melderegisterAnschrift, abstractWohnungType.melderegisterAnschrift) &&
        Objects.equals(this.einzug, abstractWohnungType.einzug) &&
        Objects.equals(this.auszug, abstractWohnungType.auszug) &&
        Objects.equals(this.statuswechsel, abstractWohnungType.statuswechsel) &&
        Objects.equals(this.meldungStatuswechsel, abstractWohnungType.meldungStatuswechsel) &&
        Objects.equals(this.meldungEinzug, abstractWohnungType.meldungEinzug) &&
        Objects.equals(this.meldungAuszug, abstractWohnungType.meldungAuszug) &&
        Objects.equals(this.innerhalb, abstractWohnungType.innerhalb) &&
        Objects.equals(this.belegGebunden, abstractWohnungType.belegGebunden) &&
        Objects.equals(this.gefoerdert, abstractWohnungType.gefoerdert) &&
        Objects.equals(this.scheinadresse, abstractWohnungType.scheinadresse);
  }

  @Override
  public int hashCode() {
    return Objects.hash(melderegisterAnschrift, einzug, auszug, statuswechsel, meldungStatuswechsel, meldungEinzug, meldungAuszug, innerhalb, belegGebunden, gefoerdert, scheinadresse);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AbstractWohnungType {\n");
    
    sb.append("    melderegisterAnschrift: ").append(toIndentedString(melderegisterAnschrift)).append("\n");
    sb.append("    einzug: ").append(toIndentedString(einzug)).append("\n");
    sb.append("    auszug: ").append(toIndentedString(auszug)).append("\n");
    sb.append("    statuswechsel: ").append(toIndentedString(statuswechsel)).append("\n");
    sb.append("    meldungStatuswechsel: ").append(toIndentedString(meldungStatuswechsel)).append("\n");
    sb.append("    meldungEinzug: ").append(toIndentedString(meldungEinzug)).append("\n");
    sb.append("    meldungAuszug: ").append(toIndentedString(meldungAuszug)).append("\n");
    sb.append("    innerhalb: ").append(toIndentedString(innerhalb)).append("\n");
    sb.append("    belegGebunden: ").append(toIndentedString(belegGebunden)).append("\n");
    sb.append("    gefoerdert: ").append(toIndentedString(gefoerdert)).append("\n");
    sb.append("    scheinadresse: ").append(toIndentedString(scheinadresse)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
